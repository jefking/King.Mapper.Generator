<#@ template language="C#" #>
<#@ import namespace="System.Linq" #>
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.2.1
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace King.Mapper.Generated.Sql
{
    using System;
    using System.Data;
    using King.Mapper.Data;

<#
foreach (var proc in this.Manifest.Values)
{
#>
    /// <summary>
    /// Class that Represents <#=proc.Preface#>.<#=proc.Name#> Stored Procedure
    /// </summary>
	public partial class <#=proc.Preface+proc.Name#> : IStoredProcedure
	{
        /// <summary>
        /// Gets Stored Proc name with Schema
        /// </summary>
		public string FullyQualifiedName()
		{
			return "<#=proc.Preface#>.<#=proc.Name#>";
		}

<#
if (null != proc.Variables && 0 < proc.Variables.Count())
{
#>
		#region Parameters
<#
foreach (var parameter in proc.Variables)
{
	var paramName = parameter.ParameterName.Replace("@", string.Empty);
	if (!string.IsNullOrWhiteSpace(paramName))
	{
		var dataTypeCSharp = DataTypeMappings.DataTypeCSharp(parameter.DataType);
		var dataTypeDb = DataTypeMappings.DataTypeDbType(parameter.DataType);
#>
        /// <summary>
        /// Gets or sets the parameter value
        /// </summary>
		[DataMapper("@<#=paramName#>", <#=dataTypeDb#>)]
		public <#=dataTypeCSharp#> <#=paramName#>
		{
			get;
			set;
		}

<#
	}
}
#>
		#endregion
<#
}
#>
	}

<#
}
#>
}